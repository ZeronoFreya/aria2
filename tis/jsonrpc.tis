// include "../../+promise/promise.tis";

class JsonRPC // JSON RPC class using POST (application/json) requests
{
  function this( url , indicatorElement = self )
     //indicatorElement - DOM element to send requests through
  {
    this.indicator = indicatorElement;
    this.url = url;
    this.token = "abcd";
    this.aria2rpc = {
      "jsonrpc": "2.0",
      "id": "xxoo",
    }
  }

  function post( methodName, argv.. ){
    var aria2rpc = {}.extend(this.aria2rpc, {
      "method": "aria2." + methodName.toString(),
      "params": argv
    });
    return this.indicator.request(#post-json, this.url , aria2rpc);
  }
  function addTorrent( torrentPath, pause=true){
    var torrent = Bytes.load( torrentPath ).toString();
    return this.post(
          "addTorrent", "token:"+this.token, torrent, [],
          {
              "pause": pause ? "true" : "false",
              "dir":"e:\\test"
          }
      );
  }
  function getFiles( gid ){
    return this.post(
        "getFiles",
        "token:"+this.token,
        gid
    );
  }
  async function showSomething(torrentPath)
  {
    try {
      var rs = await this.addTorrent(torrentPath);
      var gid = rs.result;
      rs = await this.getFiles(gid);
      stdout.println(gid,JSON.stringify(rs.result,"  "));
    } catch (err) {
      stdout.println("err",err,JSON.stringify(err,"  "));
    }
  }

}