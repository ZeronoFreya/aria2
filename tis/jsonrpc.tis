// include "../../+promise/promise.tis";

class JsonRPC // JSON RPC class using POST (application/json) requests
{
  function this( url , indicatorElement = self )
     //indicatorElement - DOM element to send requests through
  {
    this.indicator = indicatorElement;
    this.url = url;
    this.token = "aria2-sciter";
    this.aria2rpc = {
      "jsonrpc": "2.0",
      "id": "10d66190edc47b2d",
      "params": ["token:"+this.token]
    }
  }

  function post( methodName, argv.. ){
    var aria2rpc = {}.extend(this.aria2rpc, {
      "method": "aria2." + methodName.toString(),
      "params": [].concat(this.aria2rpc.params, argv)
    });
    return this.indicator.request(#post-json, this.url , aria2rpc);
  }
  async function addTorrent(torrentPath, fn){
    try {
      var torrent = Bytes.load( torrentPath ).toString();
      var rs = await this.post(
          "addTorrent",
          torrent, [],
          {
              "pause": "true",
              "dir":"d:\\aria"
          }
      );
      var gid = rs.result;
      rs = await this.post(
          "getFiles",
          gid
      )
      // stdout.println(gid,JSON.stringify(rs.result,"  "));
      fn(gid, rs.result);
    } catch (err) {
      stdout.println("err0",err);
    }
  }
  async function tellStatus(gid, keys, fn){
    try {
      var rs = await this.post(
          "tellStatus",
          gid, keys
      );
      fn(gid, rs.result);
    } catch (err) {
      stdout.println("err1", err);
    }
  }
  /*
   * 查询所有激活的任务
   * https://aria2.github.io/manual/en/html/aria2c.html#aria2.tellActive
   * return [{
   *    同 tellStatus
   * }]
  */
  async function tellActive(keys, fn){
    try {
      var rs = await this.post(
          "tellActive",
          keys
      );
      fn(true, rs.result);
    } catch (err) {
      // stdout.println("err", err);
      fn(false, err);
    }
  }
  /*
   开始暂停的任务
   ( from paused to waiting )
   https://aria2.github.io/manual/en/html/aria2c.html#aria2.unpause
   return GID
  */
  async function unpause(gid, fn){
    try {
      var rs = await this.post(
          "unpause",
          gid
      );
      fn(rs.result);
    } catch (err) {
      stdout.println("err2", err);
    }
  }
  async function changeOption(gid, fn){
    try {
      var rs = await this.post(
          "changeOption",
          gid,
          {
            "dir":"d:/aria2/"
          }
      );
      fn(rs.result);
    } catch (err) {
      stdout.println("err3", err);
    }
  }

  function getFiles( gid ){
    return this.post(
        "getFiles",
        gid
    );
  }

}