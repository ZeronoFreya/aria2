// include "common.tis";
include "decorators.tis";
include "jsonrpc.tis";
var rpc = new JsonRPC( "http://localhost:6800/jsonrpc" );
var CT;
// var template;
var downloadList = {};
var activeTask = {};
function www(){
    self.timer(1000,function(){
        rpc.tellActive(["completedLength"], function(data){
            stdout.println(JSON.stringify(data,"  "));
        })
        return true;
    });
}
self.ready = function() {
    // 加载或刷新deBug？
    $(#window-debug).on("click",function(){
        Sciter.launch( "inspector.exe" );
        view.connectToInspector($(html));
    });
    CT = $(#downloading);
    assert CT;
    // www();
    // template = CT.first;
    // CT.clear();
    // rpc.showSomething("d:\\Project\\GitHub\\aria2\\d.torrent");

    // stdout.println("4",JSON.stringify(rpc.showFiles("d:\\c.torrent"),"  "));
    // System.exec("d:\\SoftWare\\WebSW\\aria2\\aria2c.exe", "--enable-rpc", "--rpc-listen-port=6800");

}
@click @on "#new-task":{
    // 新建任务
    var urlist = view.dialog{
        url     : self.url("dialog/new-task/new-task.html"),
        client  : true,
        parameters  : "",
        alignment: -5
    }; // -5 - in the middle of its parent window;
    if (!urlist) return;
    for(var k in urlist){
        // stdout.println(v);
        
    }
    // stdout.printf("result:%v\n",v);
    return;
    // stdout.println(rpc.getFiles(v.gid));
    // startDownload(v.gid);
    // rpc.tellStatus(v.gid, ["infoHash"]);
    rpc.unpause(v.gid,function(gid, data){
        var contain = CT.$append(
            <li gid="{gid}"><i .status></i>
                <div .property>
                    <p .name>{data.bittorrent.info.name}</p>
                    <ul .status>
                        <li><span .length>{data.totalLength}</span></li>
                        <li><span .downloadSpeed>{data.downloadSpeed}</span></li>
                        <li><span .completedLength>{data.completedLength}</span></li>
                    </ul>
                </div>
            </li>
        );
    });
}
function addxxx(gid, status){
    // var el = template.clone();
    // stdout.println(el);
    var contain = CT.$append(
        <li gid="{gid}"><i .status></i>
            <div .property>
                <p .name>{status.bittorrent.info.name}</p>
                <ul .status>
                    <li><span .length>{status.totalLength}</span></li>
                    <li><span .downloadSpeed>{status.downloadSpeed}</span></li>
                    <li><span .completedLength>{status.completedLength}</span></li>
                </ul>
            </div>
        </li>
    );
    downloadList[gid] = {
        "status" : status.status,
        "el" : contain,
        "cl" : contain.$(.completedLength)
    }
    // stdout.println("li",li.@#gid);
}
// async function tellActive(){
//   try {
//     var rs = await rpc.tellActive();
//     stdout.println("tellActive",JSON.stringify(rs.result,"  "));
    
//     // addxxx(gid, rs.result)
//   } catch (err) {
//     stdout.println("err",err,JSON.stringify(err,"  "));
//   }
// }
// async function tellStatus(gid, keys){
//   try {
//     // stdout.println(gid,JSON.stringify(rs.result,"  "));
//     var rs = await rpc.tellStatus(gid, keys);
//     addxxx(gid, rs.result)
//   } catch (err) {
//     stdout.println("err",err,JSON.stringify(err,"  "));
//   }
// }
// async function startDownload(gid){
//   try {
//     // stdout.println(gid,JSON.stringify(rs.result,"  "));
//     var rs = await rpc.unpause(gid);
//     rs = await rpc.tellStatus(rs.result);
//     addxxx(gid, rs.result)
//   } catch (err) {
//     stdout.println("err",err,JSON.stringify(err,"  "));
//   }
// }
/*
864KiB/244MiB(0%) CN:25 SD:2 DL:119KiB ETA:34m49s
http://aria2.github.io/manual/en/html/aria2c.html#misc

CN
已建立的连接数
SD
已连接的种子数
DL
下载速度
UL
上传速度
ETA
预计完成下载的时间

samples\material\!test.htm
*/